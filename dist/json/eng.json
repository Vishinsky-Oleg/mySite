{
	"name": "OLEG VISHINSKY",
	"occupation": "FRONT-END DEVELOPER",
	"menu": [
		["Portfolio", "My skills", "Contacts & Links"],
		["./", "./skills.html", "./contacts.html"]
	],
	"projects": {
		"1": {
			"name": "Advanced 'TODO' application",
			"about": "TS/React/Firebase/RestAPI ToDo application",
			"imageName": "p1.jpg",
			"sections": [
				"Links",
				"Technologies used",
				"What was implemented",
				"Skill Set",
				"Libraries and frameworks"
			],
			"links": [
				[
					"GitHub",
					"logo-github",
					"https://github.com/Vishinsky-Oleg/f-flex--todo"
				],
				[
					"FIGMA template",
					"logo-figma",
					"https://www.figma.com/file/gPIlfI4uUof2WDDIcr30wv/T-Flex-Todo-Application?node-id=0%3A1"
				],
				["Link", "link-outline", "https://t-flex--todo.web.app/"]
			],
			"techUsed": [
				"TypeScript",
				"React",
				"Material UI",
				"JS (ES6+)",
				"Firebase",
				"JSON Placeholder",
				"Git/GitHub",
				"Chrome DEV Tools",
				"Create React App"
			],
			"techColors": [
				"#1A6FB4",
				"#1A6FB4",
				"#03b7d6",
				"#EFD81D",
				"#E44D26",
				"#CF4D4D",
				"#DCA6C0",
				"#6ECFAE",
				"#1A6FB4"
			],
			"implemented": "Advanced TODO application written on TypeScript. Fetching 10 users from RestAPI (JSON Placeholder) with images by ID of each user. When user is opened, Todo's are fetched from JSON Placeholder and also from firebase.Todos from firebase can be deleted and edited. Visitor can also create a new todo, which will be saved to firebase by users ID. Website deployed on firebase. Axios is responsible for requests and Material UI for Components UI. Application actively working with link's parameters from React-router-dom",
			"skills": [
				"ES6 syntax",
				"React: Hooks, React-Router-Dom",
				"Requests to RestAPI",
				"TypeScript",
				"Using vendor library for UI"
			],
			"libs": ["react-router-dom", "Firebase", "Material UI", "axios"]
		},
		"2": {
			"name": "TypeScript Drag and Drop",
			"about": "TS w/ Vanilla JS",
			"imageName": "p2.jpg",
			"sections": [
				"Links",
				"Technologies used",
				"What was implemented",
				"Skill Set",
				"Libraries and frameworks"
			],
			"links": [
				[
					"GitHub",
					"logo-github",
					"https://github.com/Vishinsky-Oleg/typescript-Tutorial"
				],
				[
					"Link",
					"link-outline",
					"https://compassionate-williams-e79835.netlify.app"
				]
			],
			"techUsed": [
				"TypeScript",
				"JS (ES6+)",
				"Webpack",
				"Git/GitHub",
				"Chrome DEV Tools"
			],
			"techColors": [
				"#1A6FB4",
				"#EFD81D",
				"#03b7d6",
				"#DCA6C0",
				"#6ECFAE"
			],
			"implemented": "Was developed by: TypeScript course from Maximilian Schwarzmüller. Simple drag and drop application created on TypeScript and based on Class constructor. Base idea resemling React core features. User can create new project and drag and drop it with mouse between two boxes. In developments was used concepts like: Decorators, Generics, Typeguard, Advanced Types and typescript's class syntax.",
			"skills": [
				"ES6+ syntax",
				"TypeScript (Typeguard, Advanced types, Generics, Class Syntax, Decoratos)",
				"Webpack"
			],
			"libs": ["webpack"]
		},
		"3": {
			"name": "React Burger Builder",
			"about": "React complex legacy application with Class Containers",
			"imageName": "p3.jpg",
			"sections": [
				"Links",
				"Technologies used",
				"What was implemented",
				"Skill Set",
				"Libraries and frameworks"
			],
			"links": [
				[
					"GitHub",
					"logo-github",
					"https://github.com/Vishinsky-Oleg/Burger-Builder"
				],
				[
					"Link",
					"link-outline",
					"https://goofy-meitner-6e0bea.netlify.app"
				]
			],
			"techUsed": [
				"React",
				"JS (ES6+)",
				"Create React App",
				"Git/GitHub",
				"Chrome DEV Tools"
			],
			"techColors": [
				"#1A6FB4",
				"#EFD81D",
				"#1A6FB4",
				"#DCA6C0",
				"#6ECFAE"
			],
			"implemented": "Was developed by: React course from Maximilian Schwarzmüller. Application built on class containers which considered legacy approach. Lets user create customly composed 'burger' and then checkout with simple form. Uses react-router-dom's link parameters to access composition of created burger. Axios creating each instance in firebase Db. Main point is to show skills with legacy lifecycle methods and clear and clean approach for creating small pieces of UI (each with own folder and css.module file). ",
			"skills": [
				"React Class Components",
				"react-routed-dom API",
				"requests to RestAPI Db (Firebase)",
				"ES6+ syntax"
			],
			"libs": ["react", "react-router-dom", "axios"]
		},
		"4": {
			"name": "'TODO' application",
			"about": "React/Firebase ToDo application",
			"imageName": "react.png",
			"sections": [
				"Links",
				"Technologies used",
				"What was implemented",
				"Skill Set",
				"Libraries and frameworks"
			],
			"links": [
				[
					"GitHub",
					"logo-github",
					"https://github.com/Vishinsky-Oleg/ToDo-Bootstrap-Firebase-App"
				],
				[
					"Link",
					"link-outline",
					"https://todo-application-78e92.web.app"
				]
			],
			"techUsed": [
				"React",
				"React-Bootstrap",
				"JS (ES6)",
				"Firebase",
				"Git/GitHub",
				"Chrome DEV Tools"
			],
			"techColors": [
				"#1A6FB4",
				"#03b7d6",
				"#EFD81D",
				"#CF4D4D",
				"#DCA6C0",
				"#6ECFAE"
			],
			"implemented": "Fully functional ToDo application with authentication system, which capable of signup, restore password via email, and update user profile. Authentication and storage was created on Firebase. Firebase functionality was used through useContext hook. Application was built solely on functional component with hooks. UI made with React-Bootstrap. In development also was used Higher Order Component concept and React-router-dom.",
			"skills": [
				"ES6 syntax",
				"React: Hooks, HOC's, React-Router-Dom, Context"
			],
			"libs": ["react-router-dom", "Firebase", "React-Bootstrap"]
		},
		"5": {
			"name": "Superdrone",
			"about": "Drone shop layout from PSD template",
			"imageName": "project1.jpg",
			"sections": [
				"Links",
				"Technologies used",
				"What was implemented",
				"Skill Set",
				"Libraries"
			],
			"links": [
				[
					"GitHub",
					"logo-github",
					"https://github.com/Vishinsky-Oleg/Superdrone-P-1"
				],
				["Image", "image-outline", "./dist/img/black.jpg"],
				["Link", "link-outline", "http://superdrone.vishinsky-oleg.ru/"]
			],
			"techUsed": [
				"HTML5",
				"CSS3",
				"JS",
				"Gulp",
				"SASS",
				"FlexBox",
				"Git/GitHub",
				"Bootstrap",
				"Chrome DEV Tools"
			],
			"techColors": [
				"#E44D26",
				"#1A6FB4",
				"#EFD81D",
				"#CF4D4D",
				"#DCA6C0",
				"#6ECFAE",
				"#E84D31",
				"#6C419D",
				"#65A757"
			],
			"implemented": "This project's layout has been built by PSD template (Not mine). There is a few animated elements and custom video player (>992px). Design of player it self left a lot to be desired, but it wasn't crucial goal in this particular case. Play button on each video is surrounded by <svg> circles, animated by HTML5 <animate> tag. Layout is cross browser compatible and responsive to resolution. Images are responsive by HTML5 <img> attributes. Two sections using different sliders, both had arrows and switch dots. In one section items has been fetched from JSON file. Vast majority of layout working on Bootstrap grid classes. Smaller container aligned with CSS's Flexbox technology.",
			"skills": [
				"Vanilla JS",
				"SVG/animation",
				"CSS animations",
				"Mobile First",
				"Adaptive layout(CSS), images(HTML5)",
				"Crossbrowser layout",
				"HTMLMediaElement API",
				"Fetching from JSON file",
				"Bootstrap: Grid, Slider",
				"BEM"
			],
			"libs": ["Bootstrap 4.5", "SlickSlider"]
		},
		"6": {
			"name": "Taicco's",
			"about": "Taicco's restaurant layout & order system",
			"imageName": "project2.jpg",
			"sections": [
				"Links",
				"Technologies used",
				"What was implemented",
				"Skill Set",
				"Libraries used"
			],
			"links": [
				[
					"GitHub",
					"logo-github",
					"https://github.com/Vishinsky-Oleg/Taicco-s-P-2"
				],
				["Image", "image-outline", "./dist/img/taiccos.jpg"],
				["Link", "link-outline", "http://taiccos.vishinsky-oleg.ru/"]
			],
			"techUsed": [
				"HTML5",
				"CSS3",
				"JS",
				"Gulp",
				"SASS",
				"Git/GitHub",
				"BootStrap",
				"Chrome DEV Tools"
			],
			"techColors": [
				"#E44D26",
				"#1A6FB4",
				"#EFD81D",
				"#CF4D4D",
				"#DCA6C0",
				"#E84D31",
				"#6C419D",
				"#65A757"
			],
			"implemented": "Layout design was inspired by image from Pinterest. Main accent was on order system to show my skills in handling objects, strings and arrays. Content filling starts by creating suitable elements, classes and functionality if needed, continues with adding text content by async/await function which fetching data from JSON file, and finished by appending to container. Order system based on LocalStorage API. Each added item id appends to LocalStorage string property called order, plus and minus button allows user to pick specific amount which appends to id. In \"Order\" page, function filtering and transforming string to object and appending items to container with quantity and some information. Order page allows user to change amount, delete item or delete everything at once, LocalStorage.order updating accordingly at the same time.",
			"skills": [
				"Vanilla JS (Strings, Objects, Array) methods",
				"CSS animations",
				"Mobile First",
				"Adaptive layout(CSS)",
				"Crossbrowser layout",
				"LocalStorage API",
				"Fetching from JSON file",
				"Bootstrap: Grid",
				"Vendor JS/CSS libraries"
			],
			"libs": ["Bootstrap 4.5 (Only Grid)", "WOW.js", "Animate CSS"]
		}
	},
	"mySkills": [
		["JS: ", "Including ES6+ syntax, Promises (async/await), OOP"],
		[
			"TypeScript: ",
			"Basic Types, Advanced types, Class syntax, Decorators, Generics"
		],
		[
			"CSS: ",
			"Preprossors (SASS), Animations, 2D transform, 3D transform, transitions; Crossbrowser/Adaptive layout, Pseudo Elements & Classes, @mediaqueries, Flexbox, Grid"
		],
		[
			"HTML: ",
			"Proper tagging, forms, svg, video/audio, responsive images"
		],
		[
			"React: ",
			"Create React App (custom templates: typescript, typescript+redux),Hooks, Routes, Higher Order Components, Context, Lifecycle methods"
		],
		[
			"Other: ",
			"Redux, Figma, Photoshop, High english level (enough for reading professional literature and documentation, like MDN or W3School), Bootstap, Gulp, Webpack,  SASS (incl: functions, iterators, mixins and variables), Parcel (replacement for gulp in smaller project), BEM naming convention, working with vendor JS and CSS libraries, VSCode (emmet, shortcust, Git, console), npm, GitHub (commit, pull, push, merge,branch), Google Developer Tools (incl/ debugging), FTP (FileZilla), Neflify (for small deploys), Bootstrap-React, Firebase, Material UI"
		],
		["To a lesser extent: ", "Adobe XD, Adobe After Effects"],
		["Basic knowledge: ", "PHP, Python, SQL, CMS (Opencart, Wordpess)"],
		["Currently learning: ", "Advanced UI development, Backend: Express"]
	],
	"contacts": [
		["Phone number: ", "+7 (926) 151-8353"],
		["E-Mail: ", "vishinsky.oleg@gmail.com"],
		["GitHub: ", "Link »", "https://github.com/Vishinsky-Oleg"],
		[
			"Homemade English evaluation: ",
			"Link »;",
			"https://www.notion.so/9641f0555b0e4cbb93b33f349d795d09?v=5535c840f45a4afb804358603eb3235b"
		],
		[
			"HeadHunter: ",
			"Link »;",
			"https://hh.ru/applicant/resumes/view?resume=6f8f37d0ff088802500039ed1f466a454b4574"
		],
		["CodeWars: ", "Link »;", "https://www.codewars.com/users/xPyPnRxyN"]
	],
	"other": ["Contacts & Links", "Skills"]
}

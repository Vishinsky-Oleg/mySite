{
	"name": "Олег Вышинский",
	"occupation": "FRONT-END Разработчик",
	"menu": [
		["Потфолио", "Мои навыки", "Контакты и ссылки"],
		["./", "./skills.html", "./contacts.html"]
	],
	"projects": {
		"1": {
			"name": "Усложненное 'TODO' приложение",
			"about": "TS/React/Firebase/RestAPI ToDo приложение",
			"imageName": "p1.jpg",
			"sections": [
				"Ссылки",
				"Технолигии использованы",
				"Что было реализовано",
				"Набор навыков",
				"Библиотеки"
			],
			"links": [
				[
					"GitHub",
					"logo-github",
					"https://github.com/Vishinsky-Oleg/f-flex--todo"
				],
				[
					"FIGMA template",
					"logo-figma",
					"https://www.figma.com/file/gPIlfI4uUof2WDDIcr30wv/T-Flex-Todo-Application?node-id=0%3A1"
				],
				["Link", "link-outline", "https://t-flex--todo.web.app/"]
			],
			"techUsed": [
				"TypeScript",
				"React",
				"Material UI",
				"JS (ES6+)",
				"Firebase",
				"JSON Placeholder",
				"Git/GitHub",
				"Chrome DEV Tools",
				"Create React App"
			],
			"techColors": [
				"#1A6FB4",
				"#1A6FB4",
				"#03b7d6",
				"#EFD81D",
				"#E44D26",
				"#CF4D4D",
				"#DCA6C0",
				"#6ECFAE",
				"#1A6FB4"
			],
			"implemented": "Усложненноe TODO приложение написанное на TypeScript. Загружает 10 пользователей из RestAPI (JSON Placeholer) c соответствующими по ID изображениями. Когда страница пользователя открыта, \"Todos\" загружаются из JSON Placeholder, а так же из Firebase. \"Todos\" из Firebase могут быть редактированы и удалены. Посетитель сайта может создавать \"Todo\" после чего они будут сохранены в базе данных Firebase с соответсвующим ID. Деплой так же осуществлён с помощью Firebase. Библиотека axios отвечает за запросы, а Material UI за внешний вид компонентов. Приложение так же работает с параметрами ссылок из \"react-router-dom\".",
			"skills": [
				"ES6 syntax",
				"React: Hooks, React-Router-Dom",
				"Запросы к RestAPI",
				"TypeScript",
				"Использование сторонней библиотеки UI"
			],
			"libs": ["react-router-dom", "Firebase", "Material UI", "axios"]
		},
		"2": {
			"name": "TypeScript Drag and Drop",
			"about": "TS w/ Vanilla JS",
			"imageName": "p2.jpg",
			"sections": [
				"Ссылки",
				"Технолигии использованы",
				"Что было реализовано",
				"Набор навыков",
				"Библиотеки"
			],
			"links": [
				[
					"GitHub",
					"logo-github",
					"https://github.com/Vishinsky-Oleg/typescript-Tutorial"
				],
				[
					"Link",
					"link-outline",
					"https://compassionate-williams-e79835.netlify.app"
				]
			],
			"techUsed": [
				"TypeScript",
				"JS (ES6+)",
				"Webpack",
				"Git/GitHub",
				"Chrome DEV Tools"
			],
			"techColors": [
				"#1A6FB4",
				"#EFD81D",
				"#03b7d6",
				"#DCA6C0",
				"#6ECFAE"
			],
			"implemented": "Было разработано на основе курса Typescript от Maximilian Schwarzmüller. Простое \"Drag&Drop\" приложение созданное с помощью Typescript и конструктора классов. Основной концепт напоминает ключевые понятия библиотеки React. Пользователь может создавать проект и перетаскивать его с помощью мыши между двумя контейнерами. В разработке были задействованы такие концепты как: Decorators, Generics, Typeguard, Advanced Types и \"typescript's class syntax\".",
			"skills": [
				"ES6+ syntax",
				"TypeScript (Typeguard, Advanced types, Generics, Class Syntax, Decoratos)",
				"Webpack"
			],
			"libs": ["webpack"]
		},
		"3": {
			"name": "React Burger Builder",
			"about": "React большое приложение построенной на устаревших Class Containers",
			"imageName": "p3.jpg",
			"sections": [
				"Ссылки",
				"Технолигии использованы",
				"Что было реализовано",
				"Набор навыков",
				"Библиотеки"
			],
			"links": [
				[
					"GitHub",
					"logo-github",
					"https://github.com/Vishinsky-Oleg/Burger-Builder"
				],
				[
					"Link",
					"link-outline",
					"https://goofy-meitner-6e0bea.netlify.app"
				]
			],
			"techUsed": [
				"React",
				"JS (ES6+)",
				"Create React App",
				"Git/GitHub",
				"Chrome DEV Tools"
			],
			"techColors": [
				"#1A6FB4",
				"#EFD81D",
				"#1A6FB4",
				"#DCA6C0",
				"#6ECFAE"
			],
			"implemented": "Было разработано на основе курса React от Maximilian Schwarzmüller. Приложение написано на классовых контейнерах которые считаются устаревшим подходом. Даёт возможность пользователю создать бургер с уникальным наполнением и после этого совершить покупку заполнив простую форму. Использует параметры ссылки \"react-router-dom\" для доступа к ингридиентам созданного бургера. Библиотека \"axios\" создаёт каждый бургер в базе данных Firebase. Основная идея - показать навыки работы с устаревшими методами жизненного цикла и чистый/понятный подход к созданию маленьких блоков UI (каждый с собственной папкой и css.module файлом). ",
			"skills": [
				"React Class Components",
				"react-routed-dom API",
				"запросы к RestAPI Db (Firebase)",
				"ES6+ syntax"
			],
			"libs": ["react", "react-router-dom", "axios"]
		},
		"4": {
			"name": "'TODO' приложение",
			"about": "React/Firebase ToDo приложение",
			"imageName": "react.png",
			"sections": [
				"Ссылки",
				"Технолигии использованы",
				"Что было реализовано",
				"Набор навыков",
				"Библиотеки"
			],
			"links": [
				[
					"GitHub",
					"logo-github",
					"https://github.com/Vishinsky-Oleg/ToDo-Bootstrap-Firebase-App"
				],
				[
					"Ссылка",
					"link-outline",
					"https://todo-application-78e92.web.app"
				]
			],
			"techUsed": [
				"React",
				"React-Bootstrap",
				"JS (ES6)",
				"Firebase",
				"Git/GitHub",
				"Chrome DEV Tools"
			],
			"techColors": [
				"#1A6FB4",
				"#03b7d6",
				"#EFD81D",
				"#CF4D4D",
				"#DCA6C0",
				"#6ECFAE"
			],
			"implemented": "Полностью функциональное \"Todo\" приложение с системой аутентификации, в котором возможны регистрация, восстановление пароля по почтовому адресу и изменение данных пользователя. В качестве системы аутентификации и хранилища был использован Firebase. Функционал Firebase был реализован через useContext hook. Приложение было написано исключительно на функциональных компонентах с использованием хуков. Пользовательский интерфейс был создан с помощью React-bootstrap. В разработке так же были задействованы: Higher Order Component концепт и react-router-dom.",
			"skills": [
				"ES6 syntax",
				"React: Hooks, HOC's, React-Router-Dom, Context"
			],
			"libs": ["react-router-dom", "Firebase", "React-Bootstrap"]
		},
		"5": {
			"name": "Superdrone",
			"about": "Магазин Дронов сверстанный по PSD макету",
			"imageName": "project1.jpg",
			"sections": [
				"Ссылки",
				"Технолигии использованы",
				"Что было реализовано",
				"Набор навыков",
				"Библиотеки"
			],
			"links": [
				[
					"GitHub",
					"logo-github",
					"https://github.com/Vishinsky-Oleg/Superdrone-P-1"
				],
				["PSD макет", "ps.png", "./dist/img/black.psd"],
				["Изображение", "image-outline", "./dist/img/black.jpg"],
				[
					"Ссылка",
					"link-outline",
					"http://superdrone.vishinsky-oleg.ru/"
				]
			],
			"techUsed": [
				"HTML5",
				"CSS3",
				"JS",
				"Gulp",
				"SASS",
				"FlexBox",
				"Git/GitHub",
				"BootStrap",
				"Chrome DEV Tools"
			],
			"techColors": [
				"#E44D26",
				"#1A6FB4",
				"#EFD81D",
				"#CF4D4D",
				"#DCA6C0",
				"#6ECFAE",
				"#E84D31",
				"#6C419D",
				"#65A757"
			],
			"implemented": "Верстка была произведена по PSD макету (Не моему). На странице присутсвуют несколько анимированных элементов и кастомный контроль видео элемента (>992px). Дизайн проигрывается реализован не в лучшей форме, но на это не был сделан упор в данном конкретном случае. Кнопка воспроизведения окружена двумя <svg> кольцами, которые анимированы с помоцию <animate> тэга. Разметка была протестирована в разных браузерах и разрешених экрана. Отзывчивость к размеру в изображениях реализована с помощью аттрубутов тэга <img>. Присутсвуют два раздела с разными слайдерами. В одном из разделом был использован фунционал метода fetch().",
			"skills": [
				"Vanilla JS",
				"SVG/animation",
				"CSS animations",
				"Mobile First",
				"Адаптивная верстка(CSS), images(HTML5)",
				"Кросс-браузерная верстка",
				"HTMLMediaElement API",
				"Fetching from JSON file",
				"Bootstrap: Grid, Slider",
				"Сторонние JS library",
				"BEM"
			],
			"libs": ["Bootstrap 4.5", "SlickSlider"]
		},
		"6": {
			"name": "Taicco's",
			"about": "Taicco's ресторан разметка и система заказа",
			"imageName": "project2.jpg",
			"sections": [
				"Ссылки",
				"Технолигии использованы",
				"Что было реализовано",
				"Набор навыков",
				"Библиотеки"
			],
			"links": [
				[
					"GitHub",
					"logo-github",
					"https://github.com/Vishinsky-Oleg/Taicco-s-P-2"
				],
				["Изображение", "image-outline", "./dist/img/taiccos.jpg"],
				["Ссылка", "link-outline", "http://taiccos.vishinsky-oleg.ru/"]
			],
			"techUsed": [
				"HTML5",
				"CSS3",
				"JS",
				"Gulp",
				"SASS",
				"Git/GitHub",
				"BootStrap",
				"Chrome DEV Tools"
			],
			"techColors": [
				"#E44D26",
				"#1A6FB4",
				"#EFD81D",
				"#CF4D4D",
				"#DCA6C0",
				"#E84D31",
				"#6C419D",
				"#65A757"
			],
			"implemented": "Дизайн сайта был вдохновлен изображением с сайта Pinterest. Основной акцент был сделан на систему заказа, с целью демонстрации навыком работы с объектами, массивами и строками. Наполнение контентом начинается с создания подходящих HTML элементов и классов, затем текстовое содержание наполняется благодаря async/await функции использующей fetch() метод из файла JSON и завершается все прикреплением элементов к готовому контейнеру. Система заказа базируется на LocalStorage API. Каждая добавленная позиция имеет id, который пополняет строку order принадлежащую LocalStorage, кнопки плюс и минус позволяют пользователю выбрать определённое количество, которое в будущем дополняет id. На странице Order, функция фильтрует и трансформирует строку order в объект и добавляет позиции в контейнер с количеством и кратким описанием. Страница Order позволяет менять количество, удалять позицию или очистить заказ полностью, обновляя LocalStorage.order в реальном времени.",
			"skills": [
				"Vanilla JS (Strings, Objects, Array) methods",
				"CSS animations",
				"Mobile First",
				"Адаптивная верстка(CSS)",
				"Кросс-браузерная верстка",
				"LocalStorage API",
				"Fetching from JSON file",
				"Bootstrap: Grid",
				"Сторонние JS/CSS libraries"
			],
			"libs": ["Bootstrap 4.5 (Only Grid)", "WOW.js", "Animate CSS"]
		}
	},
	"mySkills": [
		["JS: ", "Включая ES6+, RESTFul API, Promises (async/await), ООП"],
		[
			"CSS: ",
			"Animations, 2D transform, 3D transform, transitions; Кроссбраузерная/Адаптивная верстка, Pseudo Elements & Classes, @mediaqueries, webFonts, Flexbox, Grid"
		],
		[
			"HTML: ",
			"Надлежащее использование тэгов, forms, svg, video/audio, responsive images"
		],
		[
			"React: ",
			"Hooks, Routes, Higher Order Components, Context, Lifecycle methods"
		],
		[
			"Другие: ",
			"Высокий уровень владения Английским (Достаточный для чтения профессиональной литературы и документации, таких ресурсов как MDN или W3School), Bootstap, Gulp, Webpack, Sass (включая: functions, iterators, mixins and variables), Parcel (замена для gulp в меньших проектах), BEM именная методология, работа со сторонними библиотекаи JS и Css, VSCode (emmet, shortcust, Git, console), npm, GitHub (commit, pull, push, merge,branch), Google Developer Tools, FTP (FileZilla), Neflify (для незначительных проектов), Bootstrap-React, Firebase"
		],
		["В меньшей степени: ", "PhotoShop, Adobe Xd, Figma"],
		["Базовые знания: ", "PHP, Python, SQL, OpenCart CMS"],
		["На данный момент изучаю: ", "Redux, Typescript"]
	],
	"contacts": [
		["Телефон: ", "+7 (926) 151-8353"],
		["E-Mail: ", "vishinsky.oleg@gmail.com"],
		["GitHub: ", "Ссылка  »", "https://github.com/Vishinsky-Oleg"],
		[
			"Проверка уровня Английского: ",
			"Ссылка  »",
			"https://www.notion.so/9641f0555b0e4cbb93b33f349d795d09?v=5535c840f45a4afb804358603eb3235b"
		],
		[
			"HeadHunter: ",
			"Ссылка  »",
			"https://hh.ru/resume/6f8f37d0ff088802500039ed1f466a454b4574"
		],

		["CodeWars: ", "Ссылка  »", "https://www.codewars.com/users/xPyPnRxyN"]
	],
	"other": ["Контакты и ссылки", "Навыки"]
}
